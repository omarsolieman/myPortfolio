import{__assign as e,__spreadArrays as r}from"tslib";import{version as t}from"eslint/package.json";import{JSX_TYPES as n,isJsxNode as s,openTag as o,DEFAULT_EXTENSIONS as i,MARKDOWN_EXTENSIONS as a}from"eslint-mdx";import c from"eslint-plugin-react/lib/rules/no-unescaped-entities";import l from"eslint/lib/rules/no-unused-expressions";import m from"path";import u from"vfile";import{cosmiconfigSync as p}from"cosmiconfig";import f from"remark-mdx";import d from"remark-parse";import g from"remark-stringify";import x from"unified";var v,h={parser:"eslint-mdx",plugins:["mdx"]},y=function(e,r){return void 0===r&&(r={}),(Array.isArray(e)?e:Object.keys(e)).reduce((function(e,r){var t;return Object.assign(e,((t={})[r]=!1,t))}),r)};try{v=require("rebass")}catch(e){v=["Box","Flex","Text","Heading","Link","Button","Image","Card"]}var b=e(e({},h),{globals:y(v,{React:!1}),rules:{"lines-between-class-members":0,"react/jsx-no-undef":[2,{allowGlobals:!0}],"react/react-in-jsx-scope":0}}),k=+t.split(".").slice(0,2).join("."),j=e(e({},h),{rules:{"mdx/no-jsx-html-comments":2,"mdx/no-unescaped-entities":1,"mdx/no-unused-expressions":2,"mdx/remark":1,"no-unused-expressions":0,"react/no-unescaped-entities":0}});if(k>=6.4){var S=[{files:"*.mdx",extends:"plugin:mdx/overrides"}];try{require.resolve("prettier"),require.resolve("eslint-plugin-prettier"),S.push({files:"*.md",rules:{"prettier/prettier":[2,{parser:"markdown"}]}})}catch(e){}Object.assign(j,{overrides:S})}var q,E,w=Object.freeze({__proto__:null,base:h,overrides:b,recommended:j}),C={meta:{type:"problem",docs:{description:"Forbid invalid html style comments in jsx block",category:"SyntaxError",recommended:!0},messages:{jsxHtmlComments:"html style comments are invalid in jsx: {{ origin }}"},fixable:"code"},create:function(e){return{ExpressionStatement:function(r){var t=e.parserServices.JSXElementsWithHTMLComments;if(n.includes(r.expression.type)&&"Program"===r.parent.type&&t&&0!==t.length){var s=t.shift();if(!s.data.inline)s.data.comments.forEach((function(t){var n=t.fixed,s=t.loc,o=t.origin;return e.report({messageId:"jsxHtmlComments",data:{origin:o},loc:s,node:r,fix:function(e){return e.replaceTextRange([s.start.offset,s.end.offset],n)}})}))}}}}},I=[{char:">",alternatives:["&gt;"]},{char:'"',alternatives:["&quot;","&ldquo;","&#34;","&rdquo;"]},{char:"'",alternatives:["&apos;","&lsquo;","&#39;","&rsquo;"]},{char:"}",alternatives:["&#125;"]}],T=e(e({},c),{create:function(e){var r,t=(e.options[0]||{}).forbid||I;return(r={})["Literal, JSXText"]=function(r){var n=r.parent;if(s(n)){for(;n&&"Program"!==n.parent.type;)n=n.parent;var i=r.loc,a=i.start,c=a.line,l=a.column,m=i.end,u=m.line,p=m.column,f=e.getSourceCode().lines,d=n.loc.start.line<c?0:f.slice(c-1,u).join("\n").search(o);d<0&&(d=0);for(var g=function(n){var s=f[n-1],o=0,i=s.length;n===c&&(o=l+d),n===u&&(i=p,n===c&&(i+=d)),s=s.slice(o,i),t.forEach((function(t){for(var i=0;i<s.length;i++){var a=s[i];"string"==typeof t?a===t&&e.report({loc:{line:n,column:o+i},message:"HTML entity, `"+t+"` , must be escaped.",node:r}):a===t.char&&e.report({loc:{line:n,column:o+i},message:"`"+t.char+"` can be escaped with "+t.alternatives.map((function(e){return"``".split("").join(e)})).join(", ")+".",node:r})}}))},x=c;x<=u;x++)g(x)}},r}}),H=e(e({},l),{create:function(e){var r=l.create(e);return{ExpressionStatement:function(e){s(e.expression)&&"Program"===e.parent.type||r.ExpressionStatement(e)}}}}),L=function(e,r,t){t&&/^\.\.?([/\\]|$)/.test(e)&&(e=m.resolve(m.dirname(t),e)),r=r.endsWith("-")?r:r+"-";for(var n,s=0,o=[e,e.startsWith("@")?e.replace("/","/"+r):r+e];s<o.length;s++){var i=o[s];try{return require(i)}catch(e){n||(n=e)}}throw n},O=function(e,t){q||(q=p("remark",{packageProp:"remarkConfig"}).search),E||(E=x().use(d).freeze());var n=q(e)||{},s=n.config,o=n.filepath,i=s||{},a=i.plugins,c=void 0===a?[]:a,l=i.settings;try{c.push([require.resolve("remark-lint-file-extension"),!1])}catch(e){}var m=E().use({settings:l}).use(g);return t&&m.use(f),c.reduce((function(e,t){var n=Array.isArray(t)?t:[t],s=n[0],i=n.slice(1);return e.use.apply(e,r(["string"==typeof s?L(s,"remark",o):s],i))}),m).freeze()},P={meta:{type:"layout",docs:{description:"Linter integration with remark plugins",category:"Stylistic Issues",recommended:!0},messages:{remarkReport:"{{ source }}:{{ ruleId }} - {{ reason }}"},fixable:"code"},create:function(r){var t=r.getFilename(),n=m.extname(t),s=r.getSourceCode(),o=r.parserOptions,c=i.concat(o.extensions||[]).includes(n),l=a.concat(o.markdownExtensions||[]).includes(n);return{Program:function(n){if(c||l){var o=s.getText(n),i=O(t,c),a=u({path:t,contents:o});try{i.processSync(a)}catch(e){a.messages.includes(e)||(a.message(e).fatal=!0)}a.messages.forEach((function(t){var s=t.source,a=t.reason,c=t.ruleId,l=t.location,m=l.start,u=l.end;return r.report({messageId:"remarkReport",data:{reason:a,source:s,ruleId:c},loc:{start:e(e({},m),{column:m.column-1}),end:e(e({},u),{column:u.column-1})},node:n,fix:function(e){if(null==m.offset)return null;var r=[m.offset,null==u.offset?m.offset+1:u.offset],t=o.slice.apply(o,r),n=i.processSync(t).toString();return e.replaceTextRange(r,t.endsWith("\n")?n:n.slice(0,-1))}})}))}}}}},R={"no-jsx-html-comments":C,"no-unescaped-entities":T,"no-unused-expressions":H,remark:P};export{w as configs,y as getGlobals,O as getRemarkProcessor,C as noJsxHtmlComments,T as noUnescapedEntities,H as noUnusedExpressions,P as remark,L as requirePkg,R as rules};
